package task1;

public class BinaryOperation {

    static int bitAnd (int a, int b){
//        Значение бита, полученное в результате выполнения
//        побитового оператора AND, &, равно 1, если соответствующие
//        биты в операндах также равны 1. Во всех остальных случаях
//        значение результирующего бита равно 0.
        return a&b;
    }

    static int bitOr (int a, int b){
//        Результирующий бит, полученный в результате выполнения
//        оператора OR, |, равен 1, если соответствующий бит в
//        любом из операндов равен 1.
        return a|b;
    }

    static int bitLeft (int a, int length){
        // смещает биты на указанное число позиций влево, замещая каждый сдвинутый бит 0
        return a << length;
    }

    static int bitRight (int a, int length){
        // смещает биты на указанное число позиций вправо, замещая каждый сдвинутый бит 0
        return a >> length;
    }

    static int bitNot (int a){
//        Унарный оператор NOT (Не), ~, называемый также побитовым
//        дополнением, инвертирует все биты операнда.
        return ~a;
    }

    static int bitXor (int a, int b){
//        Результирующий бит, полученный в результате выполнения
//        оператора XOR, ^, равен 1, если соответствующий бит
//        только в одном из операндов равен 1. Во всех других случаях
//        результирующий бит равен 0.
        return a^b;
    }

}
